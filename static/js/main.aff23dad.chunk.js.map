{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","useState","setGoods","isVisible","setIsVisible","isReversed","setIsReversed","type","onClick","reverse","sort","item1","item2","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"iOAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,cAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,cAAzB,SACGE,GADMA,SCLTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+EaC,EA5EO,WACpB,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOJ,EAAP,KAAcO,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KA0BA,OAAOH,EAEH,sBAAKP,UAAU,MAAf,UACGM,EACD,uCACA,cAAC,EAAD,CAAWP,MAAK,YAAMA,KACtB,wBACEC,UAAU,SACVW,KAAK,SACLC,QA7Ba,WACnBN,EAAS,YAAIP,GAAOc,WACpBH,GAAeD,IAwBX,qBAOA,wBACET,UAAU,SACVW,KAAK,SACLC,QA/Be,WACrBN,EAAS,YAAIP,GACVe,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,QA0B1C,8BAOA,wBACEhB,UAAU,SACVW,KAAK,SACLC,QA5BM,WACZF,GAAc,GACdJ,EAAS,GAAD,OAAKH,KAuBT,mBAOA,wBACEH,UAAU,SACVW,KAAK,SACLC,QAxCa,WACnBN,EAAS,YAAIP,GACVe,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,YAmC3C,+BAUF,wBACElB,UAAU,SACVW,KAAK,SACLC,QAhEY,WAChBJ,GAAa,IA4DX,oBChFNW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aff23dad.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  goods: string[],\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"goods__list\">\n    {goods.map(good => (\n      <li key={good} className=\"goods__item\">\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const showGoods = () => {\n    setIsVisible(true);\n  };\n\n  const reverseGoods = () => {\n    setGoods([...goods].reverse());\n    setIsReversed(!isReversed);\n  };\n\n  const sortByAlphabet = () => {\n    setGoods([...goods]\n      .sort((item1, item2) => item1.localeCompare(item2)));\n  };\n\n  const sortByLength = () => {\n    setGoods([...goods]\n      .sort((item1, item2) => item1.length - item2.length));\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setGoods([...goodsFromServer]);\n  };\n\n  return isVisible\n    ? (\n      <div className=\"App\">\n        {setGoods}\n        <h1>Goods</h1>\n        <GoodsList goods={[...goods]} />\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={sortByAlphabet}\n        >\n          Srot by alphabet\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n      </div>\n    )\n    : (\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={showGoods}\n      >\n        Start\n      </button>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}