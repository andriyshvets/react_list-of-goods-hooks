{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","App","useState","setGoods","isVisible","setIsVisible","isReversed","setIsReversed","sortByAlphabet","setSrotByAlphabet","sortByLength","setSrotByLength","reverse","sort","item1","item2","localeCompare","length","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iOAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,SCLTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwEaC,EArEO,WACpB,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOH,EAAP,KAAcM,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA4CL,oBAAS,GAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KACA,EAAwCP,oBAAS,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAEIL,IACFT,EAAMe,UACNL,GAAc,IAGZC,IACFX,EAAMgB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACjDN,GAAkB,IAGhBC,IACFb,EAAMgB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAClDN,GAAgB,IAQlB,OAAOP,EAEH,sBAAKc,UAAU,MAAf,UACGf,EACD,uCACA,cAAC,EAAD,CAAWN,MAAK,YAAMA,KACtB,wBACEsB,KAAK,SACLC,QAAS,kBAAMb,GAAc,IAF/B,qBAMA,wBACEY,KAAK,SACLC,QAAS,kBAAMX,GAAkB,IAFnC,8BAMA,wBACEU,KAAK,SACLC,QAzBM,WACZb,GAAc,GACdJ,EAAS,GAAD,OAAKH,KAqBT,mBAMA,wBACEmB,KAAK,SACLC,QAAS,kBAAMT,GAAgB,IAFjC,+BASF,wBACEQ,KAAK,SACLC,QAAS,kBAAMf,GAAa,IAF9B,oBC1ENgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.89ce5a9c.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  goods: string[],\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortByAlphabet, setSrotByAlphabet] = useState(false);\n  const [sortByLength, setSrotByLength] = useState(false);\n\n  if (isReversed) {\n    goods.reverse();\n    setIsReversed(false);\n  }\n\n  if (sortByAlphabet) {\n    goods.sort((item1, item2) => item1.localeCompare(item2));\n    setSrotByAlphabet(false);\n  }\n\n  if (sortByLength) {\n    goods.sort((item1, item2) => item1.length - item2.length);\n    setSrotByLength(false);\n  }\n\n  const reset = () => {\n    setIsReversed(false);\n    setGoods([...goodsFromServer]);\n  };\n\n  return isVisible\n    ? (\n      <div className=\"App\">\n        {setGoods}\n        <h1>Goods</h1>\n        <GoodsList goods={[...goods]} />\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(true)}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setSrotByAlphabet(true)}\n        >\n          Srot by alphabet\n        </button>\n        <button\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setSrotByLength(true)}\n        >\n          Sort by length\n        </button>\n      </div>\n    )\n    : (\n      <button\n        type=\"button\"\n        onClick={() => setIsVisible(true)}\n      >\n        Start\n      </button>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}